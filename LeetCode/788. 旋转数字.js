/* 
  我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180 度后，我们仍可以得到一个有效的，且和 X 不同的数。要求每位数字都要被旋转。
  如果一个数的每位数字被旋转以后仍然还是一个数字， 则这个数是有效的。0, 1, 和 8 被旋转后仍然是它们自己；2 和 5 可以互相旋转成对方；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。
  现在我们有一个正整数 N, 计算从 1 到 N 中有多少个数 X 是好数？

  示例:
  输入: 10
  输出: 4
  解释: 
  在[1, 10]中有四个好数： 2, 5, 6, 9。
  注意: 1 和 10 不是好数, 因为他们在旋转之后不变。
  注意: N 的取值范围是 [1, 10000]。
*/
/**
 * @param {number} N
 * @return {number}
 */

// 总共有两个判断条件：
// 3、4、7旋转后会失效，所以不能存在其中这三个数。
// 2、5、6、9旋转后才会改变值，如果一个能够旋转的数没有这四个数其中之一，说明旋转后和原数相同，也不符合题意。
var rotatedDigits = function(N) {
  let ans = 0;
  let reg1 = new RegExp("3|4|7");
  let reg2 = new RegExp("2|5|6|9");
  for(let i=1; i<=N; i++) {
    if(!reg1.test(i) && reg2.test(i)) {
      ans++;
    }
  }
  return ans;
};
console.log(rotatedDigits(10)); // 4